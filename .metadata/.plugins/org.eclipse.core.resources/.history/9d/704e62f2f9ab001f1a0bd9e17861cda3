package application;

import java.util.List;

public class User {
    private int userId;
    private String username;
    private String password;
    private UserProfile profile;
    private Database db;

    public User(int userId, String username, String password, UserProfile profile, Database db) {
        this.userId = userId;
        this.username = username;
        this.password = password;
        this.profile = profile;
        this.db = db;
    }

    public boolean login(String inputUsername, String inputPassword) {
        try {
            User user = db.getUser(inputUsername, inputPassword);
            return user != null;
        } catch (Exception e) {
            System.out.println("Login error: " + e.getMessage());
            return false;
        }
    }

    public void createItinerary(String tripTitle, String startDate, String endDate, String destination) {
        try {
            db.createItinerary(userId, tripTitle, startDate, endDate, destination);
            System.out.println("Itinerary created for trip: " + tripTitle);
        } catch (Exception e) {
            System.out.println("Error creating itinerary: " + e.getMessage());
        }
    }

    public void editItinerary(int itineraryId, String tripTitle, String startDate, String endDate, String destination) {
        try {
            db.editItinerary(itineraryId, userId, tripTitle, startDate, endDate, destination);
            System.out.println("Itinerary updated for trip: " + tripTitle);
        } catch (Exception e) {
            System.out.println("Error editing itinerary: " + e.getMessage());
        }
    }

    public List<Itinerary> viewItineraries() {
        try {
            return db.getItineraries(userId);
        } catch (Exception e) {
            System.out.println("Error viewing itineraries: " + e.getMessage());
            return null;
        }
    }

    public void addExpense(int itineraryId, String description, double amount) {
        try {
            db.addExpense(userId, itineraryId, description, amount);
            System.out.println("Expense added: " + description + " - $" + amount);
        } catch (Exception e) {
            System.out.println("Error adding expense: " + e.getMessage());
        }
    }

    public List<Expense> viewExpenses(int itineraryId) {
        try {
            return db.getExpenses(itineraryId, userId);
        } catch (Exception e) {
            System.out.println("Error viewing expenses: " + e.getMessage());
            return null;
        }
    }

    public void addCollabToItinerary(int itineraryId, int collaboratorUserId) {
        try {
            db.addCollaborator(itineraryId, collaboratorUserId);
            System.out.println("Collaborator added to itinerary ID: " + itineraryId);
        } catch (Exception e) {
            System.out.println("Error adding collaborator: " + e.getMessage());
        }
    }

    public void logFeedback(String message) {
        try {
            db.logFeedback(userId, message);
            System.out.println("Feedback logged: " + message);
        } catch (Exception e) {
            System.out.println("Error logging feedback: " + e.getMessage());
        }
    }

    public void postInTripChat(int itineraryId, String message) {
        try {
            db.postInTripChat(itineraryId, userId, message);
            System.out.println("Message posted in trip chat for itinerary ID: " + itineraryId);
        } catch (Exception e) {
            System.out.println("Error posting in trip chat: " + e.getMessage());
        }
    }

    public void editProfile(String name, String email, String preferences) {
        try {
            db.updateUserProfile(userId, name, email, preferences);
            profile.updateProfile(name, email, preferences);
            System.out.println("Profile updated.");
        } catch (Exception e) {
            System.out.println("Error updating profile: " + e.getMessage());
        }
    }

    public void viewProfile() {
        profile.viewProfile();
    }

    public void deleteProfile() {
        try {
            db.deleteUser(userId);
            System.out.println("User profile deleted.");
        } catch (Exception e) {
            System.out.println("Error deleting profile: " + e.getMessage());
        }
    }
}

package application;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;

import java.util.List;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class VeiwfeedbackController {

    @FXML
    private TableView<Feedback> feedbackTable; // Feedback is a placeholder for your data model class
    @FXML
    private TableColumn<Feedback, Integer> userIdColumn; // Assuming userId is an Integer
    @FXML
    private TableColumn<Feedback, String> feedbackColumn; // Assuming feedback is a String
    @FXML
    private Button backToDashboardButton;

    private ObservableList<Feedback> feedbackList;

    /**
     * Initializes the controller and populates the table.
     */
    @FXML
    public void initialize() {
        // Configure the table columns
        userIdColumn.setCellValueFactory(new PropertyValueFactory<>("userId"));
        feedbackColumn.setCellValueFactory(new PropertyValueFactory<>("feedback"));

        // Load data into the table (replace loadFeedbackData with your own method)
        feedbackList = FXCollections.observableArrayList(loadFeedbackData());
        feedbackTable.setItems(feedbackList);
    }

    /**
     * Handles the action of the "Back to Dashboard" button.
     * 
     * @param event The ActionEvent triggered by the button.
     */
    @FXML
    private void handleBackToDashboard(ActionEvent event) {
        // Close the current stage (or navigate to the dashboard scene)
        Stage stage = (Stage) backToDashboardButton.getScene().getWindow();
        stage.close();
        // Alternatively, you can switch scenes:
        // Parent root = FXMLLoader.load(getClass().getResource("Dashboard.fxml"));
        // stage.setScene(new Scene(root));
        // stage.show();
    }

    /**
     * Loads feedback data for the table. Replace this with your actual data source.
     * 
     * @return List of Feedback objects
     */
    private List<Feedback> loadFeedbackData() {
        // Replace with actual data fetching logic (e.g., from a database or file)
        return List.of(
            new Feedback(1, "Great app!"),
            new Feedback(2, "Could use some improvements."),
            new Feedback(3, "Loved the user interface!")
        );
    }

    // Feedback model class (Replace with your actual model class if you already have one)
    public static class Feedback {
        private final int userId;
        private final String feedback;

        public Feedback(int userId, String feedback) {
            this.userId = userId;
            this.feedback = feedback;
        }

        public int getUserId() {
            return userId;
        }

        public String getFeedback() {
            return feedback;
        }
    }
}

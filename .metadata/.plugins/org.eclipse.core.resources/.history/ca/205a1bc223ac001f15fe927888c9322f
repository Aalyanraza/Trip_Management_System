package application;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.stage.Stage;

public class EdititenariesController {

//    @FXML
//    private TableView<Itinerary> itineraryTable;
//    
//    @FXML
//    private TableColumn<Itinerary, String> titleColumn;
//    
//    @FXML
//    private TableColumn<Itinerary, String> startDateColumn;
//    
//    @FXML
//    private TableColumn<Itinerary, String> endDateColumn;
//    
//    @FXML
//    private TableColumn<Itinerary, String> destinationColumn;
//    
    @FXML
    private Button backButton;
    
    @FXML
    private Button deleteButton;
    
    @FXML
    private Button editButton;

    // Event Listener for Back to Dashboard Button
    @FXML
    public void handleBackToDashboard(ActionEvent event) {
        try {
            // Load the Dashboard FXML
            FXMLLoader loader = new FXMLLoader(getClass().getResource("Dashboard.fxml"));
            Parent root = loader.load();

            // Get the current Stage and set the new Scene
            Stage stage = (Stage) backButton.getScene().getWindow();
            stage.setScene(new Scene(root));
            stage.setTitle("User Dashboard");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Event Listener for Edit Itinerary Button
    @FXML
    public void handleEditItinerary(ActionEvent event) {
//        Itinerary selectedItinerary = itineraryTable.getSelectionModel().getSelectedItem();
//
//        if (selectedItinerary != null) {
//            // Logic for editing the selected itinerary
//            System.out.println("Editing: " + selectedItinerary.getTitle());
//            // Show editing form (this can be a new screen or modal)
//        } else {
//            showAlert(AlertType.WARNING, "No Itinerary Selected", "Please select an itinerary to edit.");
//        }
    }

    // Event Listener for Delete Itinerary Button
    @FXML
    public void handleDeleteItinerary(ActionEvent event) {
//        Itinerary selectedItinerary = itineraryTable.getSelectionModel().getSelectedItem();
//
//        if (selectedItinerary != null) {
//            // Logic for deleting the selected itinerary
//            System.out.println("Deleting: " + selectedItinerary.getTitle());
//            // Optionally, remove from the table and backend (database)
//        } else {
//            showAlert(AlertType.WARNING, "No Itinerary Selected", "Please select an itinerary to delete.");
//        }
    }

    // Helper method to show alert dialogs
    private void showAlert(AlertType alertType, String title, String message) {
        Alert alert = new Alert(alertType);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

//    // Initialize method to populate the table with itineraries (sample data)
//    @FXML
//    public void initialize() {
//        // Set up the table columns with data from the backend (for now, using dummy data)
//        titleColumn.setCellValueFactory(cellData -> cellData.getValue().titleProperty());
//        startDateColumn.setCellValueFactory(cellData -> cellData.getValue().startDateProperty());
//        endDateColumn.setCellValueFactory(cellData -> cellData.getValue().endDateProperty());
//        destinationColumn.setCellValueFactory(cellData -> cellData.getValue().destinationProperty());
//
//        // Example: Add some sample itineraries (in a real app, this would come from the database)
//        itineraryTable.getItems().add(new Itinerary("Trip to Paris", "2024-01-01", "2024-01-10", "Paris"));
//        itineraryTable.getItems().add(new Itinerary("Trip to London", "2024-02-01", "2024-02-10", "London"));
//    }
}
